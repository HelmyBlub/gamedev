next test run: tamer, Sniper, All
increase version

current tasks:
    - enemy type: "God"
        - make immun to root. Rooted he can not be dragged to influence next ability pickup
        - dev steps:
            - create "God" enemy type
                - create more abilities
                    - God immune to damage buff, spawn area where God loses it
                        - player needs to bait boss to it
            - fight win
                - new highscore board
                - money amount
            - improve
                - more abilities
                - balance
        - idea:
            - more difficult than "Kings"
            - always the same, can not be replaced by player character
            - ability design should be in a way that player can dodge 100% of abilities
            - starts with 1 ability. Every 10%Hp loss get another ability
            - ability damage scales based on how often player did take damage
                - like: first time 10dmg, second time, 100dmg, third time 1000dmg and so on
            - should "work" in multiplayer
            - abilities should require "understanding" them
            - want decisions to be made in combat, resulting in different fight challenges
            - ability idea:
                - "ball", which the player can take, buff player
                    - ground effect(or maybe seeker), which grows, player needs ball to remove it. removes "ball effect" from player
                    - forces player to move around

    - load state functionality to easier testing
        - create one state for loading one state with optimal gear inside god area 
    - replay tests perforamnce metrics save in localStorage for better see how it changes



next feature ideas:
- think about next bigger feature 
    - small ideas
        - Upgrade Building: multiple king tries
    - bigger idea:
            


        - another class?
            - with sound in my this time?
        - extends existings classes for more upgrade choice?


refactor possibilities:

possible future tasks: (only keep 5)
- improvement: getChunksTouchingLine2 does not work, still needs to improve

